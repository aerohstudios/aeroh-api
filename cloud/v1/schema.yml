openapi: 3.0.0
servers:
  - description: Aeroh Cloud Production Server
    url: https://cloud.aeroh.org/api/v1
info:
  version: "1.0.0"
  title: Aeroh Cloud API
  description: >-
    Aeroh Cloud API adheres with OpenAPI 3 Spec, and provides developers with the ability to operate their devices on Aeroh Cloud with custom integrations and scripts.
    Refer [Aeroh Cloud API](https://aeroh.org/cloud/api) to get started and to download language bindings.
  contact:
    name: "Aeroh Cloud API"
    url: "https://aeroh.org/cloud/api"
    email: "support@aeroh.org"
  license:
    name: "The GNU General Public License v3.0"
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"
  termsOfService: "https://aeroh.org/legal/terms-and-conditions"
security:
  - accessCode:
      - read_devices
      - write_devices
      - control_devices
paths:
  /devices:
    get:
      summary: Get list of devices
      operationId: "getDevices"
      description: >-
        Get list of devices in the account.
      security:
        - accessCode:
          - read_devices
      tags:
        - devices
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/device'
  /devices/{id}:
    get:
      summary: Get single device details
      operationId: "getDevice"
      description: >-
        Get all the details corresponding to a single device.
      security:
        - accessCode:
          - read_devices
      tags:
        - devices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 'OK'
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/device'
  /devices/{id}/publish:
    post:
      summary: Publish a message to the device
      operationId: "publishToDevice"
      description: >-
        Publish a message to the device. This operation can be used to send commands to the device using a REST API.
        The endpoint will take care of translating the request to MQTT, and client doesn't have to worry about alternate authentication mechanism or library for a MQTT connection.
      security:
        - accessCode:
          - controlDevices
      tags:
        - devices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/device_publish'
            examples:
              data:
                summary: "Toggle Device Power"
                value:
                  data:
                    topic: "commands"
                    payload: ["power", "toggle"]
      responses:
        '201':
          description: 'Created'
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/device_publish'
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errors'
tags:
  - name: devices
    description: "Device operations"
components:
  schemas:
    device:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        links:
          type: object
          properties:
            self:
              type: string
        attributes:
          type: object
          properties:
            name:
              type: string
            mac-addr:
              type: string
            provisioned:
              type: string
            cert-active:
              type: string
            thing-name:
              type: string
            mqtt-uri:
              type: string
    device_publish:
      type: object
      properties:
        topic:
          type: string
        payload:
          oneOf:
            - type: object
            - type: array
    errors:
      type: object
      description: "JSON API 1.1 Error Object"
      properties:
        id:
          type: string
        links:
          type: object
          properties:
            about:
              $ref: '#/components/schemas/link'
            type:
              $ref: '#/components/schemas/link'
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
            parameter:
              type: string
            header:
              type: string
        meta:
          type: object
    link:
      description: "JSON API 1.1 Links Object Value"
      oneOf:
        - type: string
          nullable: true
        - $ref: '#/components/schemas/linkObj'
    linkObj:
      description: "JSON API 1.1 Link Object"
      type: object
      required:
        - href
      properties:
        href:
          type: string
        rel:
          type: string
        describedBy:
          $ref: '#/components/schemas/link'
        title:
          type: string
        type:
          type: string
        hreflang:
          type: string
        meta:
          type: object
  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://cloud.aeroh.org/oauth/authorize'
          tokenUrl: 'https://cloud.aeroh.org/oauth/token'
          scopes:
            read_devices: allows reading resources
            write_devices: allows adding, modifying and deleting devices
            control_devices: allows controlling devices, ideal for integrations
